{"ast":null,"code":"var _jsxFileName = \"/Users/theo/react-app/src/components/B4_Team/Team.tsx\";\nimport React from \"react\";\nimport style from \"./team.module.scss\";\nimport person from \"../../assets/png/team-person.png\";\nimport { Card } from \"./Card\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\nconst cards = [{\n  img: person,\n  name: \"Theo “Gundy” Escriva\",\n  job: \"Project Lead\",\n  text: \"French entrepreneur, and digital business owner, Theo has built and directed numerous projects after entering the crypto space in 2016\",\n  href: '#'\n}, {\n  img: person,\n  name: \"Zozimo Neto \",\n  job: \"Artist\",\n  text: \"When creating the generator, we used a well-known universal speech code. The text is generated by paragraphs randomly\",\n  href: '#'\n}, {\n  img: person,\n  name: \"“Sennec”\",\n  job: \"Software engineer\",\n  text: \"When creating the generator, we used a well-known universal speech code. The text is generated by paragraphs randomly\",\n  href: '#'\n}, {\n  img: person,\n  name: \"“Kotnascher”\",\n  job: \"Blockchain Developer\",\n  text: \"When creating the generator, we used a well-known universal speech code. The text is generated by paragraphs randomly\",\n  href: '#'\n}, {\n  img: person,\n  name: \"Anatoliy Demyanchuk\",\n  job: \"UI/UX designer\",\n  text: \"Ukrainian art director and designer since 2017, Anatoliy has been working exclusively for crypto projects like Jigen app and Garlicoin in the last 2 years\",\n  href: '#'\n}, {\n  img: person,\n  name: \"Moderators\",\n  job: \"Community moderators\",\n  text: \"They will be designed during the first phase of the project. Early enthusiasts who desire to help the project reach it’s full potential and help the community.\",\n  href: '#'\n}];\nexport const Team = () => {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: style.team,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: style.title,\n    id: \"Team\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Meet our team\"), /*#__PURE__*/React.createElement(Swiper, {\n    className: style.slider,\n    spaceBetween: 8,\n    slidesPerView: \"auto\",\n    slidesPerGroup: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, cards.map((card, index) => /*#__PURE__*/React.createElement(SwiperSlide, {\n    key: index,\n    className: style.slide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, Object.assign({}, card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, cards.map((card, index) => /*#__PURE__*/React.createElement(Card, Object.assign({\n    key: index\n  }, card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 48\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/theo/react-app/src/components/B4_Team/Team.tsx"],"names":["React","style","person","Card","Swiper","SwiperSlide","cards","img","name","job","text","href","Team","team","title","slider","map","card","index","slide"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport style from \"./team.module.scss\";\r\nimport person from \"../../assets/png/team-person.png\";\r\nimport {Card} from \"./Card\";\r\nimport {Swiper, SwiperSlide} from \"swiper/react\";\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport 'swiper/swiper.min.css';\r\n\r\n\r\nexport interface ICard {\r\n    img: string\r\n    name: string\r\n    job: string\r\n    text: string\r\n    href: string\r\n}\r\n\r\nconst cards: ICard[] = [\r\n    {\r\n        img: person,\r\n        name: \"Theo “Gundy” Escriva\",\r\n        job: \"Project Lead\",\r\n        text: \"French entrepreneur, and digital business owner, Theo has built and directed numerous projects after entering the crypto space in 2016\",\r\n        href: '#'\r\n    },\r\n    {\r\n        img: person,\r\n        name: \"Zozimo Neto \",\r\n        job: \"Artist\",\r\n        text: \"When creating the generator, we used a well-known universal speech code. The text is generated by paragraphs randomly\",\r\n        href: '#'\r\n    },\r\n    {\r\n        img: person,\r\n        name: \"“Sennec”\",\r\n        job: \"Software engineer\",\r\n        text: \"When creating the generator, we used a well-known universal speech code. The text is generated by paragraphs randomly\",\r\n        href: '#'\r\n    },\r\n    {\r\n        img: person,\r\n        name: \"“Kotnascher”\",\r\n        job: \"Blockchain Developer\",\r\n        text: \"When creating the generator, we used a well-known universal speech code. The text is generated by paragraphs randomly\",\r\n        href: '#'\r\n    },\r\n    {\r\n        img: person,\r\n        name: \"Anatoliy Demyanchuk\",\r\n        job: \"UI/UX designer\",\r\n        text: \"Ukrainian art director and designer since 2017, Anatoliy has been working exclusively for crypto projects like Jigen app and Garlicoin in the last 2 years\",\r\n        href: '#'\r\n    },\r\n    {\r\n        img: person,\r\n        name: \"Moderators\",\r\n        job: \"Community moderators\",\r\n        text: \"They will be designed during the first phase of the project. Early enthusiasts who desire to help the project reach it’s full potential and help the community.\",\r\n        href: '#'\r\n    },\r\n];\r\n\r\nexport const Team = () => {\r\n    return (\r\n        <section className={style.team}\r\n\r\n        >\r\n            <h2 className={style.title} id=\"Team\" >Meet our team</h2>\r\n\r\n            <Swiper\r\n                className={style.slider}\r\n                spaceBetween={8}\r\n                slidesPerView=\"auto\"\r\n                slidesPerGroup={1}\r\n            >\r\n                {\r\n                    cards.map((card, index) => (\r\n                        <SwiperSlide key={index} className={style.slide}>\r\n                            <Card {...card}/>\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n\r\n            <div className={style.cards}>\r\n                {\r\n                    cards.map((card, index) => <Card key={index} {...card}/>)\r\n                }\r\n            </div>\r\n\r\n\r\n        </section>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
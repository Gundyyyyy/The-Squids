{"ast":null,"code":"var _jsxFileName = \"/Users/theo/Downloads/react-app/src/components/B0_HomeNew/HomeNew.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport style from \"./homeNew.module.scss\";\nimport minusDefault from \"../../assets/svg/buttons/minus-d.svg\";\nimport minusHover from \"../../assets/svg/buttons/minus-h.svg\";\nimport minusClick from \"../../assets/svg/buttons/minus-c.svg\";\nimport plusDefault from \"../../assets/svg/buttons/plus-d.svg\";\nimport plusHover from \"../../assets/svg/buttons/plus-h.svg\";\nimport plusClick from \"../../assets/svg/buttons/plus-c.svg\";\nimport total from \"../../assets/png/home-total.png\";\nimport mintNowDefault from \"../../assets/svg/buttons/mint-now-d.svg\";\nimport mintNowHover from \"../../assets/svg/buttons/mint-now-h.svg\";\nimport mintNowClick from \"../../assets/svg/buttons/mint-now-c.svg\";\nimport { convertToTwoDigit, dateStart, getHours, getMins } from \"./helpers\";\nimport { ButtonLink } from \"../common/ButtonLink/ButtomLink\";\nconst texts = [[\"Starts: \", \"00am EST on 00.00.2022\"], [\"Starting Price: 0 \", \"Eth\"], [\"Price Drops By: \", \"000 until sold out or reaches 0 Eth floor\"], [\"Price Drop Frequency: \", \"Every 30 Minutes\"], [\"Max Mint Quantity: \", \"1 per wallet\"], [\"End Time: \", \"00 hours\"]];\nexport const HomeNew = () => {\n  const max = 3;\n  const price = 0.21;\n  const [count, setCount] = useState(0);\n  const [timeIsOver, setTimeIsOver] = useState(false);\n  const [time, setTime] = useState(0);\n  const [start, setStart] = useState(false);\n  useEffect(() => {\n    const time = new Date(14 * 24 * 60 * 60 * 1000 + dateStart.getTime() - new Date().getTime()).getTime();\n\n    if (time > 0 && !timeIsOver) {\n      setTime(time);\n      setStart(true);\n    }\n  }, [timeIsOver]);\n  useEffect(() => {\n    const timeId = setTimeout(() => {\n      if (start) {\n        if (time <= 60000) {\n          setTimeIsOver(true);\n          clearTimeout(timeId);\n        } else {\n          setTime(time => time - 1000);\n        }\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(timeId);\n    };\n  }, [time, start]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: style.homeNew,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.innerWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.leftBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: style.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"THE SQUIDS Auction\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.texts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, texts.map((text, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    className: style.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 71\n    }\n  }, text[0]), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 93\n    }\n  }, text[1])))), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.timerBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, convertToTwoDigit(getHours(time))), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, convertToTwoDigit(getMins(time)))), /*#__PURE__*/React.createElement(\"p\", {\n    className: style.until,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Until the close of sales\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.rightBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: style.minted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"321/9000 minted\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.countWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: style.mint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"MINT\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.countBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.countButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ButtonLink, {\n    imgDefault: minusDefault,\n    imgHover: minusHover,\n    imgClick: minusClick,\n    onClickHandler: () => setCount(count - 1),\n    className: style.countButton,\n    disabled: count === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: style.count,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, count), /*#__PURE__*/React.createElement(ButtonLink, {\n    imgDefault: plusDefault,\n    imgHover: plusHover,\n    imgClick: plusClick,\n    onClick: () => setCount(count + 1),\n    className: style.countButton,\n    disabled: count === max,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.max,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, `${max} max`))), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.totalBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.texts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, \"total\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, price * count)), /*#__PURE__*/React.createElement(\"img\", {\n    src: total,\n    alt: \"\",\n    className: style.arrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(ButtonLink, {\n    imgDefault: mintNowDefault,\n    imgHover: mintNowHover,\n    imgClick: mintNowClick,\n    className: style.mintNow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/theo/Downloads/react-app/src/components/B0_HomeNew/HomeNew.tsx"],"names":["React","useEffect","useState","style","total","convertToTwoDigit","dateStart","getHours","getMins","ButtonLink","texts","HomeNew","max","price","count","setCount","timeIsOver","setTimeIsOver","time","setTime","start","setStart","Date","getTime","timeId","setTimeout","clearTimeout","homeNew","innerWrapper","leftBlock","title","map","text","index","timerBlock","until","rightBlock","card","minted","countWrapper","mint","countBlock","countButtons","minusDefault","minusHover","minusClick","countButton","plusDefault","plusHover","plusClick","totalBlock","arrow","mintNowDefault","mintNowHover","mintNowClick","mintNow"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport style from \"./homeNew.module.scss\";\r\n\r\nimport minusDefault from \"../../assets/svg/buttons/minus-d.svg\";\r\nimport minusHover from \"../../assets/svg/buttons/minus-h.svg\";\r\nimport minusClick from \"../../assets/svg/buttons/minus-c.svg\";\r\n\r\nimport plusDefault from \"../../assets/svg/buttons/plus-d.svg\";\r\nimport plusHover from \"../../assets/svg/buttons/plus-h.svg\";\r\nimport plusClick from \"../../assets/svg/buttons/plus-c.svg\";\r\n\r\nimport total from \"../../assets/png/home-total.png\";\r\n\r\nimport mintNowDefault from \"../../assets/svg/buttons/mint-now-d.svg\";\r\nimport mintNowHover from \"../../assets/svg/buttons/mint-now-h.svg\";\r\nimport mintNowClick from \"../../assets/svg/buttons/mint-now-c.svg\";\r\n\r\nimport {convertToTwoDigit, dateStart, getHours, getMins} from \"./helpers\";\r\nimport {ButtonLink} from \"../common/ButtonLink/ButtomLink\";\r\n\r\nconst texts = [\r\n    [\"Starts: \", \"00am EST on 00.00.2022\"],\r\n    [\"Starting Price: 0 \", \"Eth\"],\r\n    [\"Price Drops By: \", \"000 until sold out or reaches 0 Eth floor\"],\r\n    [\"Price Drop Frequency: \", \"Every 30 Minutes\"],\r\n    [\"Max Mint Quantity: \", \"1 per wallet\"],\r\n    [\"End Time: \", \"00 hours\"],\r\n]\r\n\r\nexport const HomeNew = () => {\r\n    const max = 3;\r\n    const price = 0.21;\r\n    const [count, setCount] = useState(0);\r\n\r\n    const [timeIsOver, setTimeIsOver] = useState(false);\r\n    const [time, setTime] = useState(0);\r\n    const [start, setStart] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const time = new Date(14 * 24 * 60 * 60 * 1000 + dateStart.getTime() - new Date().getTime()).getTime();\r\n        if (time > 0 && !timeIsOver) {\r\n            setTime(time);\r\n            setStart(true);\r\n        }\r\n    }, [timeIsOver]);\r\n\r\n    useEffect(() => {\r\n        const timeId = setTimeout(() => {\r\n            if (start) {\r\n                if (time <= 60000) {\r\n                    setTimeIsOver(true);\r\n                    clearTimeout(timeId);\r\n                } else {\r\n                    setTime(time => time - 1000);\r\n                }\r\n            }\r\n        }, 1000);\r\n        return () => {\r\n            clearTimeout(timeId);\r\n        }\r\n    }, [time, start]);\r\n\r\n\r\n    return (\r\n        <section className={style.homeNew}>\r\n            <div className={style.innerWrapper}>\r\n                <div className={style.leftBlock}>\r\n                    <h1 className={style.title}>THE SQUIDS Auction</h1>\r\n                    <div className={style.texts}>\r\n                        {\r\n                            texts.map((text, index) => (\r\n                                <p key={index} className={style.text}><span>{text[0]}</span><span>{text[1]}</span></p>\r\n                            ))\r\n                        }\r\n                    </div>\r\n\r\n                    <div className={style.timerBlock}>\r\n                        <span>{convertToTwoDigit(getHours(time))}</span>\r\n                        <span>:</span>\r\n                        <span>{convertToTwoDigit(getMins(time))}</span>\r\n                    </div>\r\n\r\n                    <p className={style.until}>Until the close of sales</p>\r\n\r\n\r\n                </div>\r\n                <div className={style.rightBlock}>\r\n                    <div className={style.card}>\r\n                        <p className={style.minted}>321/9000 minted</p>\r\n\r\n                        <div className={style.countWrapper}>\r\n\r\n                            <p className={style.mint}>MINT</p>\r\n\r\n                            <div className={style.countBlock}>\r\n\r\n                                <div className={style.countButtons}>\r\n\r\n                                    <ButtonLink imgDefault={minusDefault}\r\n                                                imgHover={minusHover}\r\n                                                imgClick={minusClick}\r\n                                                onClickHandler={() => setCount(count - 1)}\r\n                                                className={style.countButton}\r\n                                                disabled={count === 0}\r\n                                    />\r\n\r\n                                    <p className={style.count}>{count}</p>\r\n\r\n                                    <ButtonLink imgDefault={plusDefault}\r\n                                                imgHover={plusHover}\r\n                                                imgClick={plusClick}\r\n                                                onClick={() => setCount(count + 1)}\r\n                                                className={style.countButton}\r\n                                                disabled={count === max}\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                <div className={style.max}>\r\n                                    {`${max} max`}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className={style.totalBlock}>\r\n                            <div className={style.texts}>\r\n                                <p>total</p>\r\n                                <p>{price * count}</p>\r\n                            </div>\r\n                            <img src={total} alt=\"\" className={style.arrow}/>\r\n                        </div>\r\n\r\n                        <ButtonLink imgDefault={mintNowDefault}\r\n                                    imgHover={mintNowHover}\r\n                                    imgClick={mintNowClick}\r\n                                    className={style.mintNow}\r\n                         />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12345\\\\Desktop\\\\react-app\\\\src\\\\components\\\\B0_HomeNew\\\\HomeNew.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport style from \"./homeNew.module.scss\";\nimport minusDefault from \"../../assets/svg/buttons/minus-d.svg\";\nimport minusHover from \"../../assets/svg/buttons/minus-h.svg\";\nimport minusClick from \"../../assets/svg/buttons/minus-c.svg\";\nimport plusDefault from \"../../assets/svg/buttons/plus-d.svg\";\nimport plusHover from \"../../assets/svg/buttons/plus-h.svg\";\nimport plusClick from \"../../assets/svg/buttons/plus-c.svg\";\nimport total from \"../../assets/png/home-total.png\";\nimport mintNowDefault from \"../../assets/svg/buttons/mint-now-d.svg\";\nimport mintNowHover from \"../../assets/svg/buttons/mint-now-h.svg\";\nimport mintNowClick from \"../../assets/svg/buttons/mint-now-c.svg\";\nimport { convertToTwoDigit, dateStart, getHours, getMins } from \"./helpers\";\nimport { ButtonLink } from \"../common/ButtonLink/ButtomLink\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst texts = [[\"Starts: \", \"00am EST on 00.00.2022\"], [\"Starting Price: 0 \", \"Eth\"], [\"Price Drops By: \", \"000 until sold out or reaches 0 Eth floor\"], [\"Price Drop Frequency: \", \"Every 30 Minutes\"], [\"Max Mint Quantity: \", \"1 per wallet\"], [\"End Time: \", \"00 hours\"]];\nexport const HomeNew = () => {\n  _s();\n\n  const max = 3;\n  const price = 0.21;\n  const [count, setCount] = useState(0);\n  const [timeIsOver, setTimeIsOver] = useState(false);\n  const [time, setTime] = useState(0);\n  const [start, setStart] = useState(false);\n  useEffect(() => {\n    const time = new Date(14 * 24 * 60 * 60 * 1000 + dateStart.getTime() - new Date().getTime()).getTime();\n\n    if (time > 0 && !timeIsOver) {\n      setTime(time);\n      setStart(true);\n    }\n  }, [timeIsOver]);\n  useEffect(() => {\n    const timeId = setTimeout(() => {\n      if (start) {\n        if (time <= 60000) {\n          setTimeIsOver(true);\n          clearTimeout(timeId);\n        } else {\n          setTime(time => time - 1000);\n        }\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(timeId);\n    };\n  }, [time, start]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: style.homeNew,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.innerWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.leftBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: style.title,\n          children: \"THE SQUIDS Auction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.texts,\n          children: texts.map((text, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.text,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: text[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: text[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 93\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.timerBlock,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: convertToTwoDigit(getHours(time))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: convertToTwoDigit(getMins(time))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.until,\n          children: \"Until the close of sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.rightBlock,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.card,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.minted,\n            children: \"321/9000 minted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.countWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.mint,\n              children: \"MINT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.countBlock,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.countButtons,\n                children: [/*#__PURE__*/_jsxDEV(ButtonLink, {\n                  imgDefault: minusDefault,\n                  imgHover: minusHover,\n                  imgClick: minusClick,\n                  onClickHandler: () => setCount(count - 1),\n                  className: style.countButton,\n                  disabled: count === 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: style.count,\n                  children: count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ButtonLink, {\n                  imgDefault: plusDefault,\n                  imgHover: plusHover,\n                  imgClick: plusClick,\n                  onClick: () => setCount(count + 1),\n                  className: style.countButton,\n                  disabled: count === max\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.max,\n                children: `${max} max`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.totalBlock,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.texts,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: price * count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: total,\n              alt: \"\",\n              className: style.arrow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonLink, {\n            imgDefault: mintNowDefault,\n            imgHover: mintNowHover,\n            imgClick: mintNowClick,\n            className: style.mintNow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomeNew, \"XojGTMKc0K3SZN1hBhCfJ6Meulw=\");\n\n_c = HomeNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeNew\");","map":{"version":3,"sources":["C:/Users/12345/Desktop/react-app/src/components/B0_HomeNew/HomeNew.tsx"],"names":["React","useEffect","useState","style","minusDefault","minusHover","minusClick","plusDefault","plusHover","plusClick","total","mintNowDefault","mintNowHover","mintNowClick","convertToTwoDigit","dateStart","getHours","getMins","ButtonLink","texts","HomeNew","max","price","count","setCount","timeIsOver","setTimeIsOver","time","setTime","start","setStart","Date","getTime","timeId","setTimeout","clearTimeout","homeNew","innerWrapper","leftBlock","title","map","text","index","timerBlock","until","rightBlock","card","minted","countWrapper","mint","countBlock","countButtons","countButton","totalBlock","arrow","mintNow"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport style from \"./homeNew.module.scss\";\r\n\r\nimport minusDefault from \"../../assets/svg/buttons/minus-d.svg\";\r\nimport minusHover from \"../../assets/svg/buttons/minus-h.svg\";\r\nimport minusClick from \"../../assets/svg/buttons/minus-c.svg\";\r\n\r\nimport plusDefault from \"../../assets/svg/buttons/plus-d.svg\";\r\nimport plusHover from \"../../assets/svg/buttons/plus-h.svg\";\r\nimport plusClick from \"../../assets/svg/buttons/plus-c.svg\";\r\n\r\nimport total from \"../../assets/png/home-total.png\";\r\n\r\nimport mintNowDefault from \"../../assets/svg/buttons/mint-now-d.svg\";\r\nimport mintNowHover from \"../../assets/svg/buttons/mint-now-h.svg\";\r\nimport mintNowClick from \"../../assets/svg/buttons/mint-now-c.svg\";\r\n\r\nimport {convertToTwoDigit, dateStart, getHours, getMins} from \"./helpers\";\r\nimport {ButtonLink} from \"../common/ButtonLink/ButtomLink\";\r\n\r\nconst texts = [\r\n    [\"Starts: \", \"00am EST on 00.00.2022\"],\r\n    [\"Starting Price: 0 \", \"Eth\"],\r\n    [\"Price Drops By: \", \"000 until sold out or reaches 0 Eth floor\"],\r\n    [\"Price Drop Frequency: \", \"Every 30 Minutes\"],\r\n    [\"Max Mint Quantity: \", \"1 per wallet\"],\r\n    [\"End Time: \", \"00 hours\"],\r\n]\r\n\r\nexport const HomeNew = () => {\r\n    const max = 3;\r\n    const price = 0.21;\r\n    const [count, setCount] = useState(0);\r\n\r\n    const [timeIsOver, setTimeIsOver] = useState(false);\r\n    const [time, setTime] = useState(0);\r\n    const [start, setStart] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const time = new Date(14 * 24 * 60 * 60 * 1000 + dateStart.getTime() - new Date().getTime()).getTime();\r\n        if (time > 0 && !timeIsOver) {\r\n            setTime(time);\r\n            setStart(true);\r\n        }\r\n    }, [timeIsOver]);\r\n\r\n    useEffect(() => {\r\n        const timeId = setTimeout(() => {\r\n            if (start) {\r\n                if (time <= 60000) {\r\n                    setTimeIsOver(true);\r\n                    clearTimeout(timeId);\r\n                } else {\r\n                    setTime(time => time - 1000);\r\n                }\r\n            }\r\n        }, 1000);\r\n        return () => {\r\n            clearTimeout(timeId);\r\n        }\r\n    }, [time, start]);\r\n\r\n\r\n    return (\r\n        <section className={style.homeNew}>\r\n            <div className={style.innerWrapper}>\r\n                <div className={style.leftBlock}>\r\n                    <h1 className={style.title}>THE SQUIDS Auction</h1>\r\n                    <div className={style.texts}>\r\n                        {\r\n                            texts.map((text, index) => (\r\n                                <p key={index} className={style.text}><span>{text[0]}</span><span>{text[1]}</span></p>\r\n                            ))\r\n                        }\r\n                    </div>\r\n\r\n                    <div className={style.timerBlock}>\r\n                        <span>{convertToTwoDigit(getHours(time))}</span>\r\n                        <span>:</span>\r\n                        <span>{convertToTwoDigit(getMins(time))}</span>\r\n                    </div>\r\n\r\n                    <p className={style.until}>Until the close of sales</p>\r\n\r\n\r\n                </div>\r\n                <div className={style.rightBlock}>\r\n                    <div className={style.card}>\r\n                        <p className={style.minted}>321/9000 minted</p>\r\n\r\n                        <div className={style.countWrapper}>\r\n\r\n                            <p className={style.mint}>MINT</p>\r\n\r\n                            <div className={style.countBlock}>\r\n\r\n                                <div className={style.countButtons}>\r\n\r\n                                    <ButtonLink imgDefault={minusDefault}\r\n                                                imgHover={minusHover}\r\n                                                imgClick={minusClick}\r\n                                                onClickHandler={() => setCount(count - 1)}\r\n                                                className={style.countButton}\r\n                                                disabled={count === 0}\r\n                                    />\r\n\r\n                                    <p className={style.count}>{count}</p>\r\n\r\n                                    <ButtonLink imgDefault={plusDefault}\r\n                                                imgHover={plusHover}\r\n                                                imgClick={plusClick}\r\n                                                onClick={() => setCount(count + 1)}\r\n                                                className={style.countButton}\r\n                                                disabled={count === max}\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                <div className={style.max}>\r\n                                    {`${max} max`}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className={style.totalBlock}>\r\n                            <div className={style.texts}>\r\n                                <p>total</p>\r\n                                <p>{price * count}</p>\r\n                            </div>\r\n                            <img src={total} alt=\"\" className={style.arrow}/>\r\n                        </div>\r\n\r\n                        <ButtonLink imgDefault={mintNowDefault}\r\n                                    imgHover={mintNowHover}\r\n                                    imgClick={mintNowClick}\r\n                                    className={style.mintNow}\r\n                         />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}